#!/bin/bash -e


BUCKET=ec2-cache.binaris.com
DEFAULT_FZF_QUERY=${1:-$realm}
DEFAULT_FZF_QUERY=${DEFAULT_FZF_QUERY:-$USER}

# Requirements:
# - fzf
# - aws cli

function get_cache() {
    # Set you bucket name here
    aws s3 cp --quiet s3://$BUCKET/instances.fzf >(cat)
}

function choose() {
    cache="$(get_cache)"
    echo -e "$cache\n%refresh ec2 cache" | fzf -q "$DEFAULT_FZF_QUERY"
}

while true; do
    export chosen=$(choose)
    if [[ -z "$chosen" ]]; then
        exit 1
    elif [[ "$chosen" == "%refresh ec2 cache" ]]; then
        echo "Refreshing EC2 fuzzy cache..."
        aws lambda invoke --function-name ec2-fzf-eu-central-1-discover_instances /dev/null >/dev/null
    else
        break
    fi
done

function lookup() {
    chosen=$1
    field=$2
    echo $chosen | grep -o -E "$field:\\S+" | cut -d ':' -f2
}

export key=$(lookup "$chosen" key)
export pub_ip=$(lookup "$chosen" pub_ip)
export priv_ip=$(lookup "$chosen" priv_ip)
export realm=$(lookup "$chosen" realm)

if echo $chosen | grep -E "default_user:" >/dev/null; then
    export user=$(lookup "$chosen" default_user)
else
    export user=ubuntu
fi

BASTION="kz8s-${realm}-bastion"
if echo $chosen | grep -E "ssh:bastion" >/dev/null; then
    export bastion=$(echo "$cache" | fzf -q "$BASTION" -e -1 --prompt="Select your bastion: ")
    export bastion_pub_ip=$(lookup "$bastion" pub_ip)
    echo "Using bastion ($bastion_pub_ip) to connect..."
    if echo $bastion | grep -E "default_user:" >/dev/null; then
        export DEFAULT_USER=$(lookup "$bastion" default_user)
    fi
    export ip=$priv_ip
    export proxy_command="ssh -i ~/.ssh/$key.pem -W %h:%p $DEFAULT_USER@$bastion_pub_ip"
    ssh -i ~/.ssh/$key.pem -o ProxyCommand="$proxy_command" $user@$ip
else
    export ip=$pub_ip
    ssh -i ~/.ssh/$key.pem $user@$ip
fi
